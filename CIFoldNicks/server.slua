------------------------------------------------------------------------------------
--	PROYECTO:			Comunidad de Integridad y Fuerza 3.0 (2023)
--	DERECHOS:			Todos los derechos reservados por los desarrolladores
--	ARCHIVO:			CIFoldNicks/server.slua
--	PROPÓSITO:			Script para ver los últimos nicks de un jugador
--	DESARROLLADORES:	Leandro Correa Gimenez (Salchy)
------------------------------------------------------------------------------------

local db = dbConnect("sqlite", ":/oldnicks.db")
dbExec(db, "CREATE TABLE IF NOT EXISTS oldNicks (accname TEXT, nicks TEXT)")

local cacheAccountNicks = {}

function getOldsNicksFromAccount(accname)
	if (cacheAccountNicks[accname]) then
		return cacheAccountNicks[accname]
	end
	local oldsNicks = {}
	local data = dbPoll(dbQuery(db, "SELECT * FROM oldNicks WHERE accname = ?", accname), -1)
	if (data and #data > 0) then
		oldsNicks = split(data[1]["nicks"], " , ")
	end
	cacheAccountNicks[accname] = oldsNicks
	return oldsNicks
end

function registerNewName(accname, nickname)
	dbExec(db, "DELETE FROM oldNicks WHERE accname = ?", accname)

	if (#cacheAccountNicks[accname] == 15) then -- al llegar al nick número 15, borra el primero de la lista, y añade el nuevo, de esta forma, sólo almacena 15 nicks
		table.remove(cacheAccountNicks[accname], 1)
	end
	cacheAccountNicks[accname][#cacheAccountNicks[accname] + 1] = nickname
	dbExec(db, "INSERT INTO oldNicks (accname, nicks) VALUES(?, ?)", accname, table.concat(cacheAccountNicks[accname], " , "))
end

function onLoginSaveNick(previousAccount, currentAccount)
	local accname = getAccountName(currentAccount)
	local nickname = getPlayerName(source)
	if (not compareNicks(accname, nickname)) then
		registerNewName(accname, nickname)
	end
end
addEventHandler("onPlayerLogin", root, onLoginSaveNick)

function onChangeNick(oldNick, newNick)
	local account = getPlayerAccount(source)
	if (isGuestAccount(account)) then
		return false
	end
	local accname = getAccountName(account)
	if (not compareNicks(accname, newNick)) then
		registerNewName(accname, newNick)
	end
end
addEvent("onPlayerPostChangeNick")
addEventHandler("onPlayerPostChangeNick", root, onChangeNick)

function compareNicks(accname, nickname)
	for key, val in pairs(getOldsNicksFromAccount(accname)) do
		if (string.lower(nickname) == string.lower(val)) then
			return true
		end
	end
	return false
end

-- Comandos:

function getOldsNicksFromAccountCMD(player, cmd, accname)
	if (not accname) then
		outputChatBox("Sintaxis: /getnicks [accname]", player, 0, 255, 0)
		return false
	end
	local accname = tostring(accname)
	local accname = string.gsub(accname, " ", "")
	local accname = string.gsub(accname, "\\", "")
	local account = getAccount(accname)
	if (not account) then
		outputChatBox("ERROR: Esta cuenta no existe.", player, 255, 0, 0)
		return false
	end
	outputChatBox("#AFFF30Últimos nicks de la cuenta #FF6C00'"..accname.."'#AFFF30.", player, 0, 0, 0, true)
	for key, val in pairs(getOldsNicksFromAccount(accname)) do
		outputChatBox("#AFFF30"..key.."-. #FF6C00"..val, player, 0, 0, 0, true)
	end
	outputChatBox(" ", player, 0, 0, 0)
end
addCommandHandler("getnicks", getOldsNicksFromAccountCMD)